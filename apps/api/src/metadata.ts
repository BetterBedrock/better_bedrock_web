/* eslint-disable */
export default async () => {
    const t = {
        ["./project/dto/tag-name.dto"]: await import("./project/dto/tag-name.dto"),
        ["./user/dto/user-name.dto"]: await import("./user/dto/user-name.dto"),
        ["./checkout/dto/price-option.dto"]: await import("./checkout/dto/price-option.dto"),
        ["./checkout/dto/checkout-option-entry.dto"]: await import("./checkout/dto/checkout-option-entry.dto"),
        ["./checkout/dto/checkout-option-group.dto"]: await import("./checkout/dto/checkout-option-group.dto"),
        ["./comment/dto/project-comment.dto"]: await import("./comment/dto/project-comment.dto"),
        ["./project/dto/simple-project.dto"]: await import("./project/dto/simple-project.dto"),
        ["./download/dto/downloads-notification.dto"]: await import("./download/dto/downloads-notification.dto"),
        ["./download/dto/downloads-button.dto"]: await import("./download/dto/downloads-button.dto"),
        ["./download/dto/downloads-item.dto"]: await import("./download/dto/downloads-item.dto"),
        ["./download/dto/downloads-list.dto"]: await import("./download/dto/downloads-list.dto"),
        ["./download/dto/downloads-category.dto"]: await import("./download/dto/downloads-category.dto"),
        ["./checkout/dto/checkout-offers.dto"]: await import("./checkout/dto/checkout-offers.dto"),
        ["./checkout/dto/create-checkout-session-response.dto"]: await import("./checkout/dto/create-checkout-session-response.dto"),
        ["./voucher/dto/voucher.dto"]: await import("./voucher/dto/voucher.dto"),
        ["./auth/dto/jwt-token.dto"]: await import("./auth/dto/jwt-token.dto"),
        ["./user/dto/user.dto"]: await import("./user/dto/user.dto"),
        ["./analytics/dto/analytics.dto"]: await import("./analytics/dto/analytics.dto"),
        ["./project/dto/upload-file.dto"]: await import("./project/dto/upload-file.dto"),
        ["./project/dto/search-project.dto"]: await import("./project/dto/search-project.dto"),
        ["./project/dto/project.dto"]: await import("./project/dto/project.dto"),
        ["./rating/dto/project-rating.dto"]: await import("./rating/dto/project-rating.dto"),
        ["./rating/dto/user-rating.dto"]: await import("./rating/dto/user-rating.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./project/dto/project-tag.dto"), { "ProjectTagDto": { name: { required: true, type: () => String }, projectId: { required: true, type: () => String }, projectDraft: { required: true, type: () => Boolean } } }], [import("./project/dto/tag-name.dto"), { "TagNameDto": {} }], [import("./project/dto/project.dto"), { "ProjectDto": { title: { required: true, type: () => String }, id: { required: true, type: () => String }, draft: { required: true, type: () => Boolean }, submitted: { required: true, type: () => Boolean }, description: { required: true, type: () => Object }, itemWeight: { required: true, type: () => Number }, betterBedrockContent: { required: true, type: () => Boolean }, lastChanged: { required: true, type: () => Date }, createdAt: { required: true, type: () => Date }, error: { required: true, type: () => String, nullable: true }, thumbnail: { required: true, type: () => String, nullable: true }, downloadFile: { required: true, type: () => String, nullable: true }, tags: { required: true, type: () => [t["./project/dto/tag-name.dto"].TagNameDto] }, type: { required: true, type: () => Object }, userId: { required: true, type: () => String } } }], [import("./project/dto/decline-project.dto"), { "DeclineProjectDto": {} }], [import("./user/dto/user.dto"), { "UserDto": { id: { required: true, type: () => String }, googleId: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, bio: { required: true, type: () => String }, banned: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, customLinkvertise: { required: true, type: () => Boolean }, linkvertiseId: { required: true, type: () => String, nullable: true }, linkvertiseSecret: { required: true, type: () => String, nullable: true } } }], [import("./user/dto/user-name.dto"), { "UserNameDto": {} }], [import("./project/dto/simple-project.dto"), { "SimpleProjectDto": { user: { required: true, type: () => t["./user/dto/user-name.dto"].UserNameDto } } }], [import("./project/dto/search-project-query.dto"), { "SearchProjectsQueryDto": { type: { required: false, type: () => String }, text: { required: false, type: () => String }, page: { required: false, type: () => Number, default: 1 } } }], [import("./project/dto/update-project.dto"), { "UpdateProjectDto": {} }], [import("./download/dto/generate-download.dto"), { "GenerateDownloadDto": { file: { required: true, type: () => String, description: "Name of the file user wants to generate download for", example: "better-bedrock.txt" } } }], [import("./download/dto/verify-download.dto"), { "VerifyDownloadDto": { hash: { required: false, type: () => String, description: "Hash generated to go through the ads on linkvertise", example: "XtvYC1IqiGH06GcJdzWfggAos9XPS0WQZkclYWoXqV6nq4ar4u0OG9bNfuKfuguJ", minLength: 64, maxLength: 64 }, code: { required: false, type: () => String } } }], [import("./user/dto/update-profile.dto"), { "UpdateProfileDto": {} }], [import("./checkout/dto/create-checkout-session.dto"), { "CreateCheckoutSessionDto": { priceId: { required: true, type: () => String, description: "Id of the Stripe's price", example: "price_123456" } } }], [import("./checkout/dto/activate-voucher.dto"), { "ActivateVoucherDto": { checkoutId: { required: true, type: () => String, description: "Id of the Stripe's checkout session", example: "cs_test_a11YYufWQzNY63zpQ6QSNRQhkUpVph4WRmzW0zWJO2znZKdVujZ0N0S22u" }, code: { required: true, type: () => String, description: "Code of a voucher to activate", example: "12345678" } } }], [import("./checkout/dto/price-option.dto"), { "PriceOptionDto": { price: { required: true, type: () => Number, description: "Price in EUR", example: 1 }, label: { required: true, type: () => String, description: "Description of the pricing option", example: "For One Week (Better Bedrock Content Only)" }, title: { required: true, type: () => String, description: "A title for the DownloadMethodCard", example: "Get 50 Ad Free Downloads" }, featured: { required: true, type: () => Boolean, description: "Whether this option is featured", example: false }, maxDownloads: { required: true, type: () => Number, description: "How many dowloads does user get with the voucher", example: 1 }, expiresAt: { required: true, type: () => Number, description: "How many days from today does user have to use the voucher", example: 7 }, betterBedrockContentOnly: { required: true, type: () => Boolean, description: "Specifies whether the voucher allows for download of Better Bedrock content", example: true } } }], [import("./checkout/dto/checkout-option-entry.dto"), { "CheckoutOptionEntryDto": { priceId: { required: true, type: () => String, description: "Stripe price ID", example: "price_1RYVyQQKPqpU2QRop44SCri8" }, priceOption: { required: true, type: () => t["./checkout/dto/price-option.dto"].PriceOptionDto, description: "Pricing option details" } } }], [import("./checkout/dto/checkout-option-group.dto"), { "CheckoutOptionGroupDto": { title: { required: true, type: () => String, description: "Title of the group (e.g. Week, Month)", example: "Week" }, items: { required: true, type: () => [t["./checkout/dto/checkout-option-entry.dto"].CheckoutOptionEntryDto], description: "List of pricing entries for this group" } } }], [import("./checkout/dto/checkout-offers.dto"), { "CheckoutOffersDto": { offers: { required: true, type: () => [t["./checkout/dto/checkout-option-group.dto"].CheckoutOptionGroupDto], description: "Array of checkout option groups" } } }], [import("./checkout/dto/create-checkout-session-response.dto"), { "CreateCheckoutSessionResponseDto": { checkoutId: { required: true, type: () => String, description: "Id of the Stripe's checkout session", example: "cs_test_a11YYufWQzNY63zpQ6QSNRQhkUpVph4WRmzW0zWJO2znZKdVujZ0N0S22u" } } }], [import("./voucher/dto/voucher.dto"), { "VoucherDto": { id: { required: true, type: () => String, description: "Unique identifier of the voucher", example: "ckv9p34s50000svef8bl7w2gb" }, email: { required: true, type: () => String, description: "Email associated with the voucher", example: "user@example.com", format: "email" }, checkoutId: { required: false, type: () => String, nullable: true, description: "Unique checkout session ID associated with the voucher", example: "chk_1234567890abcdef" }, code: { required: true, type: () => String, description: "Unique voucher code", example: "SUMMER2025" }, createdAt: { required: true, type: () => Date, description: "Date and time when the voucher was created", example: "2025-06-01T12:34:56.789Z" }, expiresAt: { required: true, type: () => Date, description: "Expiry date of the voucher", example: "2025-12-31T23:59:59.000Z" }, maxDownloads: { required: true, type: () => Number, description: "Maximum number of times the voucher can be downloaded", example: 1, minimum: 1 }, downloadCount: { required: true, type: () => Number, description: "Current number of times the voucher has been downloaded", example: 0, minimum: 0 }, betterBedrockContentOnly: { required: true, type: () => Boolean, description: "Restrict voucher to Better Bedrock content only", example: false }, blocked: { required: true, type: () => Boolean, description: "Determins whether voucher is blocked", example: false } } }], [import("./voucher/dto/create-voucher.dto"), { "CreateVoucher": {} }], [import("./voucher/dto/update-voucher.dto"), { "UpdateVoucher": {} }], [import("./auth/dto/authorize.dto"), { "AuthorizeDto": { token: { required: true, type: () => String } } }], [import("./auth/dto/google-account.dto"), { "GoogleAccountDto": { sub: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, picture: { required: true, type: () => String } } }], [import("./auth/dto/jwt-token.dto"), { "JwtTokenDto": { token: { required: true, type: () => String, description: "A unique token for user authentication", example: "xxxxx.yyyyy.zzzzz" }, isNewUser: { required: true, type: () => Boolean } } }], [import("./analytics/dto/analytics.dto"), { "AnalyticsDto": { id: { required: true, type: () => String, description: "Unique identifier of the analytics entry", example: "cme0bzzxp000008l1bjjjbns4" }, type: { required: true, type: () => Object }, name: { required: true, type: () => String }, date: { required: true, type: () => Date, description: "The date when the analytics data was recorded", example: "2025-08-06" }, value: { required: true, type: () => Number, description: "The numeric value associated with the analytics entry", example: 42 } } }], [import("./project/dto/create-project.dto"), { "CreateProjectDto": {} }], [import("./project/dto/upload-file.dto"), { "UploadFileDto": { fileUrl: { required: true, type: () => String } } }], [import("./rating/dto/project-rating.dto"), { "ProjectRatingDto": { average: { required: true, type: () => Number }, count: { required: true, type: () => Number } } }], [import("./rating/dto/rating.dto"), { "RatingDto": { id: { required: true, type: () => String }, rating: { required: true, type: () => Number, minimum: 1, maximum: 5 }, userId: { required: true, type: () => String }, projectId: { required: true, type: () => String }, createdAt: { required: true, type: () => Date } } }], [import("./rating/dto/rate-project.dto"), { "RateProjectDto": {} }], [import("./rating/dto/user-rating.dto"), { "UserRatingDto": { average: { required: true, type: () => Number }, count: { required: true, type: () => Number } } }], [import("./rating/dto/rate-project-params.dto"), { "RateProjectParamsDto": {} }], [import("./comment/dto/comment.dto"), { "CommentDto": { id: { required: true, type: () => String }, content: { required: true, type: () => String }, authorId: { required: true, type: () => String }, projectId: { required: true, type: () => String }, parentId: { required: true, type: () => String, nullable: true }, pinned: { required: true, type: () => Boolean }, createdAt: { required: true, type: () => Date }, deleted: { required: true, type: () => Boolean }, deletedAt: { required: true, type: () => Date, nullable: true } } }], [import("./comment/dto/post-comment.dto"), { "PostCommentDto": {} }], [import("./comment/dto/project-comment.dto"), { "ProjectCommentDto": { author: { required: true, type: () => ({ id: { required: true, type: () => String }, name: { required: true, type: () => String } }) }, replies: { required: false, type: () => [t["./comment/dto/project-comment.dto"].ProjectCommentDto] } } }], [import("./comment/dto/reply-to-comment.dto"), { "ReplyToCommentDto": {} }], [import("./comment/dto/post-comment-params.dto"), { "PostCommentParamsDto": {} }], [import("./comment/dto/reply-to-comment-params.dto"), { "ReplyToCommentParamsDto": {} }], [import("./project/dto/search-project.dto"), { "SearchProjectsDto": { items: { required: true, type: () => [t["./project/dto/simple-project.dto"].SimpleProjectDto] }, total: { required: true, type: () => Number }, page: { required: true, type: () => Number }, totalPages: { required: true, type: () => Number } } }], [import("./user/dto/simple-user.dto"), { "SimpleUserDto": {} }], [import("./download/dto/downloads-notification.dto"), { "DownloadsNotificationDto": { title: { required: true, type: () => String, description: "Title of the notification", example: "Confirmation" }, description: { required: true, type: () => String, description: "Description of the notification", example: "Confirmation" }, type: { required: true, type: () => Object } } }], [import("./download/dto/downloads-button.dto"), { "DownloadsButtonDto": { type: { required: true, type: () => Object }, text: { required: true, type: () => String, description: "Button inside the category yet not responsible for downloads", example: "Share your texturepacks" }, link: { required: false, type: () => String, description: "Link of redirection on button click (can be left if notification is prefered)", example: "https://google.com" }, notification: { required: false, type: () => t["./download/dto/downloads-notification.dto"].DownloadsNotificationDto } } }], [import("./download/dto/downloads-item.dto"), { "DownloadsItemDto": { projectId: { required: true, type: () => String, description: "Id of the project", example: "better_bedrock.mcpack" }, buttonType: { required: true, type: () => Object }, description: { required: true, type: () => String, description: "Description of the item", example: "Dark mode in minecraft" }, titleColor: { required: false, type: () => String, description: "Color of the text inside the download card", example: "black" }, tagBgColor: { required: false, type: () => String } } }], [import("./download/dto/downloads-list.dto"), { "DownloadsListDto": { title: { required: true, type: () => String, description: "Title of the list", example: "Featured" }, description: { required: true, type: () => String, description: "Description of the list", example: "Our latest texturepack" }, buttons: { required: false, type: () => [t["./download/dto/downloads-button.dto"].DownloadsButtonDto] }, items: { required: true, type: () => [t["./download/dto/downloads-item.dto"].DownloadsItemDto] } } }], [import("./download/dto/downloads-category.dto"), { "DownloadsCategoryDto": { id: { required: true, type: () => String, description: "Id of the category (also used in url as a way to determine which category to open)", example: "sideProjects" }, name: { required: true, type: () => String, description: "Name of the category", example: "Side Projects" }, lists: { required: true, type: () => [t["./download/dto/downloads-list.dto"].DownloadsListDto] } } }], [import("./download/dto/downloads-rich-description.dto"), { "DownloadsRichDescriptionDto": { name: { required: true, type: () => String, description: "Text display above the image", example: "Before & After" }, images: { required: true, type: () => [String], description: "List of links to images", example: ["/static/assets/image.png"] } } }], [import("./download/dto/downloads.dto"), { "DownloadsDto": { default: { required: true, type: () => String, description: "Default section which will be opened on the website", example: "main" }, featured: { required: true, type: () => String, description: "Featured item on the website (an item after clicking which, user gets redirected to /latest)", example: "better_bedrock_v8.mcpack" }, categories: { required: true, type: () => [t["./download/dto/downloads-category.dto"].DownloadsCategoryDto], description: "Categories of downloads on the website" } } }]], "controllers": [[import("./download/download.controller"), { "DownloadController": { "download": {}, "verify": {}, "generate": {} } }], [import("./checkout/checkout.controller"), { "CheckoutController": { "offers": { type: t["./checkout/dto/checkout-offers.dto"].CheckoutOffersDto }, "create": { type: t["./checkout/dto/create-checkout-session-response.dto"].CreateCheckoutSessionResponseDto }, "activate": {}, "webhook": {} } }], [import("./voucher/voucher.controller"), { "VoucherController": { "vouchers": { type: [t["./voucher/dto/voucher.dto"].VoucherDto] }, "create": { type: t["./voucher/dto/voucher.dto"].VoucherDto }, "update": { type: t["./voucher/dto/voucher.dto"].VoucherDto } } }], [import("./auth/auth.controller"), { "AuthController": { "authorize": { type: t["./auth/dto/jwt-token.dto"].JwtTokenDto }, "authenticate": { type: t["./user/dto/user.dto"].UserDto }, "adminAuthenticate": {} } }], [import("./analytics/analytics.controller"), { "AnalyticsController": { "analytics": { type: [t["./analytics/dto/analytics.dto"].AnalyticsDto] }, "user": { type: [t["./analytics/dto/analytics.dto"].AnalyticsDto] } } }], [import("./project/project.controller"), { "ProjectController": { "create": {}, "uploadProjectFile": { type: t["./project/dto/upload-file.dto"].UploadFileDto }, "search": { type: t["./project/dto/search-project.dto"].SearchProjectsDto }, "userProjects": { type: [t["./project/dto/simple-project.dto"].SimpleProjectDto] }, "projectDetails": { type: t["./project/dto/project.dto"].ProjectDto }, "draftDetails": { type: t["./project/dto/project.dto"].ProjectDto }, "update": { type: t["./project/dto/project.dto"].ProjectDto }, "submit": {}, "cancelSubmission": {}, "publish": {}, "decline": {}, "submitted": { type: [t["./project/dto/simple-project.dto"].SimpleProjectDto] }, "delete": {}, "rateProject": { type: t["./rating/dto/project-rating.dto"].ProjectRatingDto }, "getProjectRating": { type: t["./rating/dto/project-rating.dto"].ProjectRatingDto }, "deleteRating": { type: t["./rating/dto/project-rating.dto"].ProjectRatingDto }, "comments": { type: [t["./comment/dto/project-comment.dto"].ProjectCommentDto] }, "postComment": { type: Object }, "replyToComment": { type: Object }, "deleteComment": {} } }], [import("./user/user.controller"), { "UserController": { "userInfoByName": {}, "userInfoById": {}, "updateProfile": {}, "profileRating": { type: t["./rating/dto/user-rating.dto"].UserRatingDto }, "userRating": { type: Object } } }]] } };
};