/* eslint-disable */
export default async () => {
    const t = {
        ["@better-bedrock/constants/downloads.dto"]: await import("@better-bedrock/constants/downloads.dto"),
        ["@better-bedrock/constants/checkout.dto"]: await import("@better-bedrock/constants/checkout.dto"),
        ["./checkout/dto/create-checkout-session-response.dto"]: await import("./checkout/dto/create-checkout-session-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./download/dto/generate-download.dto"), { "GenerateDownloadDto": { file: { required: true, type: () => String, description: "Name of the file user wants to generate download for", example: "better-bedrock.txt" } } }], [import("./download/dto/verify-download.dto"), { "VerifyDownloadDto": { hash: { required: true, type: () => String, description: "Hash generated to go through the ads on linkvertise", example: "XtvYC1IqiGH06GcJdzWfggAos9XPS0WQZkclYWoXqV6nq4ar4u0OG9bNfuKfuguJ", minLength: 64, maxLength: 64 }, code: { required: true, type: () => String } } }], [import("@better-bedrock/constants/downloads.dto"), { "DownloadsItemDto": { title: { required: true, type: () => String }, creator: { required: true, type: () => String }, description: { required: true, type: () => String }, downloadId: { required: true, type: () => String }, buttonType: { required: true, type: () => Object }, itemWeight: { required: true, type: () => Number }, imageAssetUrl: { required: true, type: () => [String] } }, "DownloadNotificationDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, type: { required: true, type: () => Object } }, "DownloadButtonDto": { type: { required: true, type: () => Object }, text: { required: true, type: () => String }, link: { required: false, type: () => String }, notification: { required: false, type: () => t["@better-bedrock/constants/downloads.dto"].DownloadNotificationDto } }, "DownloadsListDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, buttons: { required: false, type: () => [t["@better-bedrock/constants/downloads.dto"].DownloadButtonDto] }, items: { required: true, type: () => [t["@better-bedrock/constants/downloads.dto"].DownloadsItemDto] } }, "DownloadsDto": { main: { required: true, type: () => [t["@better-bedrock/constants/downloads.dto"].DownloadsListDto] }, community: { required: true, type: () => [t["@better-bedrock/constants/downloads.dto"].DownloadsListDto] }, sideProjects: { required: true, type: () => [t["@better-bedrock/constants/downloads.dto"].DownloadsListDto] } } }], [import("./checkout/dto/create-checkout-session.dto"), { "CreateCheckoutSessionDto": { priceId: { required: true, type: () => String, description: "Id of the Stripe's price", example: "price_123456" } } }], [import("./checkout/dto/activate-voucher.dto"), { "ActivateVoucherDto": { checkoutId: { required: true, type: () => String, description: "Id of the Stripe's checkout session", example: "cs_test_a11YYufWQzNY63zpQ6QSNRQhkUpVph4WRmzW0zWJO2znZKdVujZ0N0S22u" }, code: { required: true, type: () => String, description: "Code of a voucher to activate", example: "12345678" } } }], [import("@better-bedrock/constants/checkout.dto"), { "PriceOptionDto": { price: { required: true, type: () => Number, description: "Price in EUR", example: 1 }, label: { required: true, type: () => String, description: "Description of the pricing option", example: "Get 50 Ad Free Downloads For One Week (Better Bedrock Content Only)" }, featured: { required: true, type: () => Boolean, description: "Whether this option is featured", example: false }, maxDownloads: { required: true, type: () => Number, description: "How many dowloads does user get with the voucher", example: 1 }, expiresAt: { required: true, type: () => Number, description: "How many days from today does user have to use the voucher", example: 7 }, betterBedrockContentOnly: { required: true, type: () => Boolean, description: "Specifies whether the voucher allows for download of Better Bedrock content", example: true } }, "CheckoutOptionEntryDto": { priceId: { required: true, type: () => String, description: "Stripe price ID", example: "price_1RYVyQQKPqpU2QRop44SCri8" }, priceOption: { required: true, type: () => t["@better-bedrock/constants/checkout.dto"].PriceOptionDto, description: "Pricing option details" } }, "CheckoutOptionGroupDto": { title: { required: true, type: () => String, description: "Title of the group (e.g. Week, Month)", example: "Week" }, items: { required: true, type: () => [t["@better-bedrock/constants/checkout.dto"].CheckoutOptionEntryDto], description: "List of pricing entries for this group" } }, "CheckoutOffersDto": { offers: { required: true, type: () => [t["@better-bedrock/constants/checkout.dto"].CheckoutOptionGroupDto], description: "Array of checkout option groups" } } }], [import("@better-bedrock/constants/voucher.dto"), { "VoucherDto": { id: { required: true, type: () => String, description: "Unique identifier of the voucher", example: "ckv9p34s50000svef8bl7w2gb" }, email: { required: true, type: () => String, description: "Email associated with the voucher", example: "user@example.com", format: "email" }, checkoutId: { required: true, type: () => String, description: "Unique checkout session ID associated with the voucher", example: "chk_1234567890abcdef" }, code: { required: true, type: () => String, description: "Unique voucher code", example: "SUMMER2025" }, createdAt: { required: true, type: () => Date, description: "Date and time when the voucher was created", example: "2025-06-01T12:34:56.789Z" }, expiresAt: { required: true, type: () => Date, description: "Expiry date of the voucher", example: "2025-12-31T23:59:59.000Z" }, maxDownloads: { required: true, type: () => Number, description: "Maximum number of times the voucher can be downloaded", example: 1, minimum: 1 }, downloadCount: { required: true, type: () => Number, description: "Current number of times the voucher has been downloaded", example: 0, minimum: 0 }, betterBedrockContentOnly: { required: true, type: () => Boolean, description: "Restrict voucher to Better Bedrock content only", example: false } } }], [import("./checkout/dto/create-checkout-session-response.dto"), { "CreateCheckoutSessionResponseDto": { checkoutId: { required: true, type: () => String, description: "Id of the Stripe's checkout session", example: "cs_test_a11YYufWQzNY63zpQ6QSNRQhkUpVph4WRmzW0zWJO2znZKdVujZ0N0S22u" } } }], [import("./content/dto/side-projects.dto"), { "SideProjectDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, imageAssetUrl: { required: true, type: () => String } } }], [import("./content/dto/theme.dto"), { "ThemeDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, imageAssetUrl: { required: true, type: () => String } } }]], "controllers": [[import("./download/download.controller"), { "DownloadController": { "download": {}, "verify": { type: t["@better-bedrock/constants/downloads.dto"].DownloadsItemDto }, "generate": {} } }], [import("./content/content.controller"), { "ContentController": { "downloads": { type: t["@better-bedrock/constants/downloads.dto"].DownloadsDto } } }], [import("./checkout/checkout.controller"), { "CheckoutController": { "offers": { type: t["@better-bedrock/constants/checkout.dto"].CheckoutOffersDto }, "create": { type: t["./checkout/dto/create-checkout-session-response.dto"].CreateCheckoutSessionResponseDto }, "activate": { type: Object }, "webhook": {} } }]] } };
};