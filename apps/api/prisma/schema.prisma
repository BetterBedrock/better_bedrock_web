// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Download {
  ipAddress String   @id
  createdAt DateTime @default(now())
  file      String
  verified  Boolean  @default(false)
}

model Voucher {
  id                       String   @id @default(cuid())
  email                    String
  checkoutId               String?
  code                     String   @unique
  createdAt                DateTime @default(now())
  expiresAt                DateTime
  maxDownloads             Int      @default(1)
  downloadCount            Int      @default(0)
  betterBedrockContentOnly Boolean  @default(false)
  blocked                  Boolean  @default(false)
}

enum AnalyticsType {
  file
  general
}

model Analytics {
  id    String        @id @default(cuid())
  type  AnalyticsType
  name  String
  date  DateTime      @default(now()) @db.Date
  value Int           @default(0)

  @@unique([name, date, type])
}

model User {
  id        String    @id @default(cuid())
  googleId  String    @unique
  email     String    @unique
  name      String    @unique
  bio       String
  banned    Boolean   @default(false)
  createdAt DateTime  @default(now())
  projects  Project[]
}

enum ProjectType {
  world
  texturepack
  shaderpack
  behaviourpack
  addon
  skin
  script
}

model Project {
  title     String
  id        String  @id
  draft     Boolean @default(true)
  verified  Boolean @default(false)
  submitted Boolean @default(false)

  description          String
  itemWeight           Float // In MB (e.g. 11.5)
  betterBedrockContent Boolean  @default(false)
  lastChanged          DateTime
  createdAt            DateTime @default(now())

  error String

  files String[]

  tags String[]
  type ProjectType

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@unique([id, draft])
}
