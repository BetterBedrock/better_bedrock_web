@use "~/assets/styles/global.scss" as g;

.gallery {
  position: relative;
  display: flex;
  flex-direction: column;

  width: 100%;
  height: 100%;

  overflow: hidden;

  background-color: rgb(47, 47, 48);
  padding: g.$padding-sm;
  gap: g.$padding-sm;

  @media (max-width: g.$breakpoint-tablet) {
    flex-direction: column;
  }
}

.fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 90;
}

.close {
  width: 22px;
  height: 22px;
}

.hero {
  position: relative;
  flex: 1;
  height: 0;

  img {
    aspect-ratio: 16 / 9;
    object-fit: contain;
  }
}

.images {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  flex-direction: row;
  width: 100%;
  gap: g.$padding-xsm;

  white-space: nowrap;
}

.preview {
  // flex-basis: calc( (100% - (g.$padding-xsm * (LIMIT_VAR - 1)) ) / LIMIT_VAR ); // If you want them to divide space
  width: 120px; // Or a fixed width for thumbnails
  height: 100%; // Take full height of .images container
  aspect-ratio: 16/9; // Enforce aspect ratio for the container itself
  overflow: hidden;

  background-color: #444; // Placeholder background

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover; // 'cover' might look better for thumbnails to fill space
    // aspect-ratio: 16/9; // Already on the container, can be removed from img if container enforces it
  }
}

.selected {
  border: 1.6px solid rgb(255, 196, 43);
}

.arrow {
  aspect-ratio: 1/1;
  height: 32px; // This is good, keeps them fixed
  width: 32px;
  flex-shrink: 0; // Prevent arrows from shrinking
  // Ensure arrows align nicely
  display: flex;
  align-items: center;
  justify-content: center;

  img {
    height: 100%;
    width: 100%;
    object-fit: contain; // Good for icon-like images
  }
}
